{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/context/LanguageContext.tsx"],"sourcesContent":["\"use client\"\n\nimport React, { createContext, useContext, useState } from \"react\"\n\ntype Language = \"en\" | \"hi\"\n\ninterface Translations {\n  [key: string]: {\n    [key: string]: string\n  }\n}\n\nconst translations: Translations = {\n  en: {\n    welcome: \"Welcome to ASKSHO\",\n    getStarted: \"Get Started\",\n    dashboard: \"Dashboard\",\n    scanReport: \"Scan Report\",\n    recordVisit: \"Record Visit\",\n    fitness: \"Fitness\",\n    settings: \"Settings\",\n    currentVitals: \"Current Vitals\",\n    healthTips: \"AI Health Tips\",\n    connectDevice: \"Connect Device\",\n    viewHistory: \"View History\",\n    logout: \"Logout\"\n  },\n  hi: {\n    welcome: \"ASKSHO में आपका स्वागत है\",\n    getStarted: \"शुरू करें\",\n    dashboard: \"डैशबोर्ड\",\n    scanReport: \"रिपोर्ट स्कैन करें\",\n    recordVisit: \"विज़िट रिकॉर्ड करें\",\n    fitness: \"फिटनेस\",\n    settings: \"सेटिंग्स\",\n    currentVitals: \"वर्तमान वाइटल्स\",\n    healthTips: \"AI स्वास्थ्य सुझाव\",\n    connectDevice: \"डिवाइस कनेक्ट करें\",\n    viewHistory: \"इतिहास देखें\",\n    logout: \"लॉग आउट\"\n  }\n}\n\ninterface LanguageContextType {\n  language: Language\n  setLanguage: (lang: Language) => void\n  t: (key: string) => string\n}\n\nconst LanguageContext = createContext<LanguageContextType | undefined>(undefined)\n\nexport function LanguageProvider({ children }: { children: React.ReactNode }) {\n  const [language, setLanguage] = useState<Language>(\"en\")\n\n  const t = (key: string): string => {\n    return translations[language][key] || key\n  }\n\n  return (\n    <LanguageContext.Provider value={{ language, setLanguage, t }}>\n      {children}\n    </LanguageContext.Provider>\n  )\n}\n\nexport function useLanguage() {\n  const context = useContext(LanguageContext)\n  if (context === undefined) {\n    throw new Error(\"useLanguage must be used within a LanguageProvider\")\n  }\n  return context\n}\n"],"names":[],"mappings":";;;;;AAEA;;;AAFA;;AAYA,MAAM,eAA6B;IACjC,IAAI;QACF,SAAS;QACT,YAAY;QACZ,WAAW;QACX,YAAY;QACZ,aAAa;QACb,SAAS;QACT,UAAU;QACV,eAAe;QACf,YAAY;QACZ,eAAe;QACf,aAAa;QACb,QAAQ;IACV;IACA,IAAI;QACF,SAAS;QACT,YAAY;QACZ,WAAW;QACX,YAAY;QACZ,aAAa;QACb,SAAS;QACT,UAAU;QACV,eAAe;QACf,YAAY;QACZ,eAAe;QACf,aAAa;QACb,QAAQ;IACV;AACF;AAQA,MAAM,gCAAkB,CAAA,GAAA,6JAAA,CAAA,gBAAa,AAAD,EAAmC;AAEhE,SAAS,iBAAiB,EAAE,QAAQ,EAAiC;;IAC1E,MAAM,CAAC,UAAU,YAAY,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAY;IAEnD,MAAM,IAAI,CAAC;QACT,OAAO,YAAY,CAAC,SAAS,CAAC,IAAI,IAAI;IACxC;IAEA,qBACE,6LAAC,gBAAgB,QAAQ;QAAC,OAAO;YAAE;YAAU;YAAa;QAAE;kBACzD;;;;;;AAGP;GAZgB;KAAA;AAcT,SAAS;;IACd,MAAM,UAAU,CAAA,GAAA,6JAAA,CAAA,aAAU,AAAD,EAAE;IAC3B,IAAI,YAAY,WAAW;QACzB,MAAM,IAAI,MAAM;IAClB;IACA,OAAO;AACT;IANgB","debugId":null}},
    {"offset": {"line": 89, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/lib/utils.ts"],"sourcesContent":["import { clsx, type ClassValue } from \"clsx\"\nimport { twMerge } from \"tailwind-merge\"\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs))\n}\n"],"names":[],"mappings":";;;AAAA;AACA;;;AAEO,SAAS,GAAG,GAAG,MAAoB;IACxC,OAAO,CAAA,GAAA,8JAAA,CAAA,UAAO,AAAD,EAAE,CAAA,GAAA,wIAAA,CAAA,OAAI,AAAD,EAAE;AACtB","debugId":null}},
    {"offset": {"line": 108, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/components/ui/button.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst buttonVariants = cva(\n  \"inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium transition-all disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg:not([class*='size-'])]:size-4 shrink-0 [&_svg]:shrink-0 outline-none focus-visible:border-ring focus-visible:ring-ring/50 focus-visible:ring-[3px] aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"bg-primary text-primary-foreground shadow-xs hover:bg-primary/90\",\n        destructive:\n          \"bg-destructive text-white shadow-xs hover:bg-destructive/90 focus-visible:ring-destructive/20 dark:focus-visible:ring-destructive/40 dark:bg-destructive/60\",\n        outline:\n          \"border bg-background shadow-xs hover:bg-accent hover:text-accent-foreground dark:bg-input/30 dark:border-input dark:hover:bg-input/50\",\n        secondary:\n          \"bg-secondary text-secondary-foreground shadow-xs hover:bg-secondary/80\",\n        ghost:\n          \"hover:bg-accent hover:text-accent-foreground dark:hover:bg-accent/50\",\n        link: \"text-primary underline-offset-4 hover:underline\",\n      },\n      size: {\n        default: \"h-9 px-4 py-2 has-[>svg]:px-3\",\n        sm: \"h-8 rounded-md gap-1.5 px-3 has-[>svg]:px-2.5\",\n        lg: \"h-10 rounded-md px-6 has-[>svg]:px-4\",\n        icon: \"size-9\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nfunction Button({\n  className,\n  variant,\n  size,\n  asChild = false,\n  ...props\n}: React.ComponentProps<\"button\"> &\n  VariantProps<typeof buttonVariants> & {\n    asChild?: boolean\n  }) {\n  const Comp = asChild ? Slot : \"button\"\n\n  return (\n    <Comp\n      data-slot=\"button\"\n      className={cn(buttonVariants({ variant, size, className }))}\n      {...props}\n    />\n  )\n}\n\nexport { Button, buttonVariants }\n"],"names":[],"mappings":";;;;;AACA;AACA;AAEA;;;;;AAEA,MAAM,iBAAiB,CAAA,GAAA,mKAAA,CAAA,MAAG,AAAD,EACvB,+bACA;IACE,UAAU;QACR,SAAS;YACP,SACE;YACF,aACE;YACF,SACE;YACF,WACE;YACF,OACE;YACF,MAAM;QACR;QACA,MAAM;YACJ,SAAS;YACT,IAAI;YACJ,IAAI;YACJ,MAAM;QACR;IACF;IACA,iBAAiB;QACf,SAAS;QACT,MAAM;IACR;AACF;AAGF,SAAS,OAAO,EACd,SAAS,EACT,OAAO,EACP,IAAI,EACJ,UAAU,KAAK,EACf,GAAG,OAIF;IACD,MAAM,OAAO,UAAU,mKAAA,CAAA,OAAI,GAAG;IAE9B,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,eAAe;YAAE;YAAS;YAAM;QAAU;QACvD,GAAG,KAAK;;;;;;AAGf;KAnBS","debugId":null}},
    {"offset": {"line": 171, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/components/LanguageSwitcher.tsx"],"sourcesContent":["\"use client\"\n\nimport { Button } from \"@/components/ui/button\"\nimport { useLanguage } from \"@/context/LanguageContext\"\n\nexport function LanguageSwitcher() {\n  const { language, setLanguage } = useLanguage()\n\n  return (\n    <div className=\"fixed top-4 right-4 z-50\">\n      <Button\n        variant=\"outline\"\n        size=\"sm\"\n        onClick={() => setLanguage(language === \"en\" ? \"hi\" : \"en\")}\n        className=\"min-w-[80px]\"\n      >\n        {language === \"en\" ? \"हिंदी\" : \"English\"}\n      </Button>\n    </div>\n  )\n}\n"],"names":[],"mappings":";;;;AAEA;AACA;;;AAHA;;;AAKO,SAAS;;IACd,MAAM,EAAE,QAAQ,EAAE,WAAW,EAAE,GAAG,CAAA,GAAA,qIAAA,CAAA,cAAW,AAAD;IAE5C,qBACE,6LAAC;QAAI,WAAU;kBACb,cAAA,6LAAC,qIAAA,CAAA,SAAM;YACL,SAAQ;YACR,MAAK;YACL,SAAS,IAAM,YAAY,aAAa,OAAO,OAAO;YACtD,WAAU;sBAET,aAAa,OAAO,UAAU;;;;;;;;;;;AAIvC;GAfgB;;QACoB,qIAAA,CAAA,cAAW;;;KAD/B","debugId":null}}]
}